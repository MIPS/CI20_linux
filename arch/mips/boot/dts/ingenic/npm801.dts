/dts-v1/;
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/net/rfkill-regulator.h>
#include "jz4780.dtsi"

/ {
	compatible = "ingenic,npm801", "ingenic,jz4780";

	aliases {
		serial0 = &uart0;
		serial1 = &uart1;
		serial3 = &uart3;
		serial4 = &uart4;
	};

	chosen {
		stdout-path = &uart4;
	};

	memory {
		device_type = "memory";
		reg = <0x0 0x10000000
		       0x30000000 0x30000000>;
	};

	audio: audio-npm801 {
		compatible = "ingenic,npm801-audio";
		ingenic,i2s-controller = <&i2s>;
		ingenic,codec = <&codec>;
	};

	hdmi_power: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "hdmi_power";
		gpio = <&gpa 25 GPIO_ACTIVE_LOW>;
		enable-active-high;
		regulator-always-on;
	};

	wifi_power: fixedregulator@1 {
		compatible = "regulator-fixed";
		regulator-name = "wifi_power_gpio";
		gpio = <&gpd 8 0>;
		enable-active-high;

		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;

	};

	/* HACK: Keeping wifi reset high. No simple driver fix */
	wifi_reset: fixedregulator@2 {
		compatible = "regulator-fixed";
		regulator-name = "wifi_reset_gpio";
		gpio = <&gpf 7 0>;
		enable-active-high;
		regulator-always-on;
	};

	/* HACK: Keeping BT reset high. No simple driver fix */
	bt_reset: fixedregulator@3 {
		compatible = "regulator-fixed";
		regulator-name = "bt_reset_gpio";
		gpio = <&gpf 8 0>;
		enable-active-high;
	};

	/* HACK: Keeping BT_reg_on high. No simple driver fix */
	bt_reg_on: fixedregulator@4 {
		compatible = "regulator-fixed";
		regulator-name = "bt_reg_on_gpio";
		gpio = <&gpf 4 0>;
		enable-active-high;
		regulator-always-on;
	};

	/* HACK: Keeping BT wake high. No simple driver fix */
	bt_wake: fixedregulator@5 {
		compatible = "regulator-fixed";
		regulator-name = "bt_wake_gpio";
		gpio = <&gpf 5 0>;
		enable-active-high;
		regulator-always-on;
	};

	lcd_enabled: fixedregulator@6 {
		compatible = "regulator-fixed";
		regulator-name = "vccio3v0_reg";
		regulator-min-microvolt = <3000000>;
		regulator-max-microvolt = <3000000>;
		gpio = <&gpb 23 0>;
		enable-active-high;
	};

	lcd_power: fixedregulator@7 {
		compatible = "regulator-fixed";
		regulator-name = "lcd_power";
		gpio = <&gpe 0 0>;
		regulator-boot-on;
		enable-active-high;
		regulator-always-on;
	};

	mma8452_power: fixedregulator@8 {
		compatible = "regulator-fixed";
		regulator-name = "mma8452_power";
		regulator-min-microvolt = <3000000>;
		regulator-max-microvolt = <3000000>;
		gpio = <&gpe 9 0>;
		enable-active-high;
	};

	camera_power: fixedregulator@9 {
		compatible = "regulator-fixed";
		regulator-name = "camera_power";
		regulator-min-microvolt = <2800000>;
		regulator-max-microvolt = <2800000>;
		gpio = <&gpb 27 0>;
		enable-active-high;
	};

	ir: ir-receiver {
		compatible = "gpio-ir-receiver";
		gpios = <&gpe 3 GPIO_ACTIVE_LOW>;
	};

	bt-rfkill {
		compatible = "rfkill-regulator";
		label = "bt-reset";
		type = <RFKILL_TYPE_BLUETOOTH>;
		vrfkill-supply = <&bt_reset>;
	};

	charger {
		compatible = "ingenic,jz4780-charger";
		gpio-ac = <&gpa 16 GPIO_ACTIVE_HIGH>;
		gpio-charging = <&gpb 3 GPIO_ACTIVE_LOW>;
	};

	gpio-keys {
		compatible = "gpio-keys";

		back_button {
			label = "Back Button";
			gpios = <&gpb  5 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_BACK>;
		};

		power_button {
			label = "Power Button";
			gpios = <&gpa  30 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_POWER>;
			gpio-key,wakeup;
		};

		volume_down_button {
			label = "Volume Down Button";
			gpios = <&gpd  18 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_VOLUMEDOWN>;
		};

		volume_up_button {
			label = "Volume Up Button";
			gpios = <&gpd  17 0>;
			linux,code = <KEY_VOLUMEUP>;
		};
	};

	lcd_panel: backlight@1 {
		compatible = "crd080ti01_40nm01-lcd";
	};

	fw: firmware {};
};

&adc {
	battery: jz4780-battery@1 {
		compatible = "ingenic,jz4780-adc,battery", "ingenic,jz4780-battery";
		max-vol = <4080>;
		min-vol = <3600>;
		usb-max-vol = <4100>;
		usb-min-vol = <3760>;
		ac-max-vol = <4150>;
		ac-min-vol = <3760>;
		battery-max-cpt = <3500>;
		ac-chg-current = <1000>;
		usb-chg-current = <400>;
		sleep-current = <30>;
	};
};

&ext {
	clock-frequency = <48000000>;
};

&lcd {
	max-width = <1024>;
	max-height = <768>;

	clocks = <&cgu JZ4780_CLK_TVE>, <&cgu JZ4780_CLK_LCD0PIXCLK>, <&cgu JZ4780_CLK_LCD>, <&cgu JZ4780_CLK_LCD1PIXCLK>;
	clock-names = "lcd_clk", "lcd_pixclk", "lcd1_clk", "lcd1_pixclk";
};

&msc0 {
	bus-width = <4>;
	max-frequency = <50000000>;
	cd-gpios = <&gpf 20 GPIO_ACTIVE_LOW>;

	pinctrl-names = "default";
	pinctrl-0 = <&pins_msc0_pe>;
};

&msc1 {
	bus-width = <4>;
	max-frequency = <24000000>;
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&pins_msc1_pd>;
	vmmc-supply = <&wifi_power>;

	keep-power-in-suspend;
};

&ehci {
	ingenic,vbus-gpio = <&gpf 15 0>;
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_uart0_data>;
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_uart1_data>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_uart2_dataplusflow>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_uart3_data>;
	status = "okay";
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_uart4_data>;
	status = "okay";
};

&i2c0 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pins_i2c0_data>;

	pmic: act8600@5a {
		compatible = "active-semi,act8600";
		reg = <0x5a>;

		regulators {
			vcore1v_reg: DCDC_REG1 {
				regulator-name = "vcore1v2";
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1400000>;
				regulator-always-on;
			};

			vddmem1v5_reg: DCDC_REG2 {
				regulator-name = "vddmem1v5";
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <1500000>;
				regulator-always-on;
			};

			vccio3v3_reg: DCDC_REG3 {
				regulator-name = "vccio3v3";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vcc2v5_reg: LDO_REG5 {
				regulator-name = "vcc2.5";
				regulator-min-microvolt = <2500000>;
				regulator-max-microvolt = <2500000>;
				regulator-always-on;
			};

			vwifi_reg: LDO_REG6 {
				regulator-name = "vwifi3v3";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
			};

			touchscreen_reg: LDO_REG7 {
				regulator-name = "mg8698s_2v8";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
			};

			lcd_regulator: LDO_REG8 {
				regulator-name = "lcd3v0";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3000000>;
				regulator-boot-on;
				regulator-always-on;
			};

			/* Do not disable RTC as they connect to reset line */
			vrtc1v8_reg: LDO_REG9 {
				regulator-name = "vrtc1v8";
				regulator-always-on;
			};

			vrtc1v1_reg: LDO_REG10 {
				regulator-name = "vrtc1v2";
				regulator-always-on;
			};
		};
	};
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pins_i2c1_data>;

	mg8698s_ts {
		compatible = "tcs,mg8698_tcs";
		reg = <0x44>;

		wake-gpios = <&gpf 18 GPIO_ACTIVE_LOW>;
		interrupt = <&gpf 19 GPIO_ACTIVE_LOW>;

		x-size = <1344>;
		y-size = <960>;
	};

};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pins_i2c2_data>;

	ov7675@0x21 {
		compatible = "omnivision,ov7675";
		reg = <0x21>;

		core-supply = <&camera_power>;

		gpio-enable = <&gpb 18 0>;

		remote = <&cim>;
		port {
			ov7675_1: endpoint {
				bus-width = <8>;
				remote-endpoint = <&enp0>;
			};
		};
	};

	ov2650@0x30 {
		compatible = "omnivision,ov2650";
		reg = <0x30>;

		core-supply = <&camera_power>;

		gpio-enable = <&gpb 19 0>;
		gpio-reset = <&gpb 26 0>;

		remote = <&cim>;
		port {
			ov2650_1: endpoint {
				bus-width = <8>;
				remote-endpoint = <&enp1>;
			};
		};
	};
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pins_i2c3_data>;

	accelerometer: mma8452@1c {
		compatible = "ingenic,mma8452";
		reg = <0x1c>;

		gpio-int = <&gpf 9 0>;
		poll-interval = <100>;
		min-interval = <40>;
		max-interval = <200>;
		g-range = /bits/ 8 <0>;
		axis-map-x = /bits/ 8 <0>;
		axis-map-y = /bits/ 8 <1>;
		axis-map-z = /bits/ 8 <2>;
		negate-x = /bits/ 8 <1>;
		negate-y = /bits/ 8 <1>;
		negate-z = /bits/ 8 <1>;

		ori-pr_swap = /bits/ 8 <0>;
		ori-pith_negate = /bits/ 8 <0>;
		ori-roll_negate = /bits/ 8 <1>;
	};
};

&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pins_i2c4_data_pf>;
};

&cim {
	clock-frequency = <24000000>;

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;

			enp0: endpoint {
				remote-endpoint = <&ov7675_1>;
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <0>;
			};
		};

		port@1 {
			reg = <1>;

			enp1: endpoint {
				remote-endpoint = <&ov2650_1>;
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <0>;
			};
		};
	};
};

